# Even Fibonacci Numbers

'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
the first 10 terms will be:
    1,2,3,5,8,13,21,34,55,89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

'''
F_n = F_n-1 + F_n-2 for n > 2
F_1 = 1
F_2 = 2

To find F_2 , we have F_1, F_0 = 1, 0
To find F_4, we have F_3 + F_2(Even valued)
and F_3 = F_2(Even Valued) + F_1

so F_4 = 2 * F_2 + F_1
right?
F_4 = F_3 + F_2 = F_2 + F_1 + F_2 = 2 * F_2 + F_1 

F_6 = F_5 + F_4 = F_4 + F_3 = F_3 + F_2 + F_2 + F_1 = 3 * F_2 + 2 * F_1
F_n = F_n-1 + F_n-2 = F_n-2 + F_n-3 + F_n-3 + F_n-4 = F_n-2 + 2 * F_n-3 + F_n-4 = 3 * F_n-3 + 2 * F_n-4

iF WE CONTINUE 
F_n = 3*F_n-3 + F_n-4 + F_n-4 = 3*F_n-3 + F_n-4 + F_n-5 + F_n-6 = 4*F_n-3 + F_n-6



'''

def Fibonacci(n):
    if n == 1:
        return 1
    if n == 2:
        return 2
    return Fibonacci(n-1) + Fibonacci(n-2)

def Fibonacci2(n):
    fn_2 = 2
    fn_1 = 8 
    sum = 10 
    while True:
        fn = 4 * fn_1 + fn_2
        if fn > n:return sum 
        sum += fn
        fn_2, fn_1 = fn_1, fn


n = int(4e6)
print(n)
print(Fibonacci2(n))

    
